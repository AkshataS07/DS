# -*- coding: utf-8 -*-
"""Lab_04.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yQDKmcmwN0Xn-Zcc6pft3jUyQxrD1VJl

<h1> Data Analytics - 1 (Linear regression) </h1>

<h4> Problem Statement </h4>
<h5>Create a Linear Regression Model using Python/R to predict home
prices using Boston Housing .Dataset (https://www.kaggle.com/c/boston-housing). The Boston
Housing dataset contains information about various houses in Boston through different parameters.
There are 506 samples
and 14 feature variables in this dataset.The objective is to predict the value of prices of the house
using the given features.</h5>
"""

# imports
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
#from sklearn.datasets import load_boston
import warnings
warnings.filterwarnings('ignore')
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, mean_absolute_error

boston_data = pd.read_csv("HousingData.csv")

boston_data.info()

boston_data.isnull().sum()

boston_data.isna().sum().sum()

data = boston_data.dropna()
data

plt.figure(figsize=(12,8))
sns.heatmap(data.corr().abs(), annot= True, cmap= 'coolwarm');

"""Features that affect target (High value for -ve or +ve corelation): 'LSTAT', 'RM', 'TAX', 'INDUS'"""

train_df= data[['LSTAT', 'PTRATIO','RM', 'TAX','INDUS','MEDV']]
train_df

x = train_df[['LSTAT', 'RM', 'TAX', 'INDUS']]
y = train_df['MEDV']

scaler = StandardScaler()
x = scaler.fit_transform(x)

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, shuffle=True)

"""<h3> Training </h3>"""

model = LinearRegression()
model.fit(x_train, y_train)

"""<h3> Evaluation </h3>"""

y_pred = model.predict(x_test)

y_pred[:5]

y_test[:5]

mse = mean_squared_error(y_test, y_pred)
mse

sns.regplot(x = y_test, y = y_pred, ci= 95)